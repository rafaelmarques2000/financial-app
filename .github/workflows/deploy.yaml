name: Publish Docker image

on:
  release:
    types: [published]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USER: rafaelmarquespaixao
      DOCKERHUB_REPO: financial-app
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: $DOCKERHUB_USER/$DOCKERHUB_REPO

      - name: build frontend
        uses: actions/setup-node@master
      - run: npm install
      - run: npm run build

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      Deploy:
        needs: push_to_registry
        runs-on: ubuntu-latest

        steps:
          - uses: actions/checkout@v2
          - name: Deploy in EC2
            env:
              PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
              HOSTNAME: ${{ secrets.AWS_HOSTNAME  }}
              USER_NAME: ${{ secrets.AWS_USERNAME  }}

            run: |
              echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
              ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
              
                #Now we have got the access of EC2 and we will start the deploy .
                cd /home/ubuntu&&
                echo "teste de CD" > teste.txt